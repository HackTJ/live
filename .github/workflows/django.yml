name: Django

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: pip cache
      id: cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      # if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry config virtualenvs.create false
        poetry install

    - name: Run Tests
      run: |
        SECRET_KEY=9 poetry run python manage.py createsecrets --exclude superuser --exclude sendgrid --exclude postgres --output ./.env
        export $(grep -v '^#' .env | xargs)
        poetry run python manage.py migrate
        poetry run python -Wa manage.py check --deploy
        poetry run python -Wa manage.py test
