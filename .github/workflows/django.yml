name: Django

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: pip cache
      id: cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      # if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry config virtualenvs.create false
        poetry install

    - name: Run Tests
      run: |
        poetry run python manage.py createsecrets

        export SECRET_KEY="$(cat ./compose/secrets/development/secret_key.txt)"
        export DJANGO_SUPERUSER_USERNAME="$(cat ./compose/secrets/development/django_superuser_username.txt)"
        export DJANGO_SUPERUSER_PASSWORD="$(cat ./compose/secrets/development/django_superuser_password.txt)"
        export DJANGO_SUPERUSER_EMAIL="$(cat ./compose/secrets/development/django_superuser_email.txt)"
        export SENDGRID_API_KEY="$(cat ./compose/secrets/development/sendgrid_api_key.txt)"
        export POSTGRES_PASSWORD="$(cat ./compose/secrets/development/postgres_password.txt)"
        export POSTGRES_USER="$(cat ./compose/secrets/development/postgres_user.txt)"
        export POSTGRES_DB="$(cat ./compose/secrets/development/postgres_db.txt)"

        poetry run python manage.py migrate
        poetry run python -Wa manage.py check --deploy
        poetry run python -Wa manage.py test
